apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.example.sunflower_copy"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
//        customDebugType {
//            debuggable true
//        }

    }

    buildFeatures {
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.gridlayout:gridlayout:$gridLayoutVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // Navigation
//    implementation "android.arch.navigation:navigation-fragment-ktx:$version_navigation"
//    implementation "android.arch.navigation:navigation-ui-ktx:$version_navigation"


    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"

    // Glide
    //implementation "com.github.bumptech.glide:glide:$version_glide"
    //implementation "com.github.bumptech.glide:glide:4.8.0"
    //kapt 'com.github.bumptech.glide:compiler:4.7.1'
    implementation "com.github.bumptech.glide:glide:4.11.0"
    kapt "com.github.bumptech.glide:compiler:4.10.0"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.recyclerview:recyclerview-selection:$recyclerviewSelectionVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    // Room dependency
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"


    // coroutines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // maps
    implementation "com.google.android.gms:play-services-maps:$mapsVersion"
    implementation "com.google.android.libraries.places:places:$placesVersion"

    // picasso
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    // firebase
    implementation "com.firebaseui:firebase-ui-auth:$firebaseVersion"

    // for some map function used in firebase
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-alpha02"

    // preferences for users
    implementation "androidx.preference:preference-ktx:$preferenceVersion"

    // dependencies for tests
    testImplementation "org.mockito:mockito-core:2.9.0"

    // for system stuff (mocking static methods)
    testImplementation "org.powermock:powermock-api-mockito2:1.7.0RC2"
    //testImplementation "org.powermock:powermock-module-junit4-rule-agent:$powermockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:1.7.0"
    testImplementation "org.powermock:powermock-module-junit4:1.7.0"
    testImplementation "org.powermock:powermock-core:1.7.0"

    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    implementation "androidx.fragment:fragment-testing:$fragmentVersion"
    implementation "androidx.test:core:$androidXTestCoreVersion"

    implementation "androidx.fragment:fragment-ktx:1.1.0"

    androidTestImplementation "androidx.test:rules:$rulesVersion"
    androidTestImplementation "androidx.test.ext:junit:$extJUnitVersion"
    androidTestImplementation "androidx.test:runner:$runnerVersion"


    implementation "androidx.work:work-runtime-ktx:$workVersion"
    androidTestImplementation "androidx.work:work-testing:$workVersion"

}

apply plugin: 'com.google.gms.google-services'